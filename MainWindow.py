# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'MainWindow.ui'
#
# Created by: PyQt5 UI code generator 5.15.4
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.


from PyQt5 import QtCore, QtGui, QtWidgets
import sqlite3
from PyQt5.QtCore import Qt

class TableModel(QtCore.QAbstractTableModel):
    def __init__(self, data):
        super(TableModel, self).__init__()
        self._data = data
        self._row = ['Track ID','Song','Artist','Album','Duration','REMOVEjk']

    def data(self, index, role):
        if role == Qt.DisplayRole:
            # See below for the nested-list data structure.
            # .row() indexes into the outer list,
            # .column() indexes into the sub-list
            return self._data[index.row()][index.column()]

    def rowCount(self, index):
        # The length of the outer list.
        return len(self._data)

    def columnCount(self, index):
        # The following takes the first sub-list, and returns
        # the length (only works if all rows are an equal length)
        return len(self._data[0])

    def headerData(self, col, orientation, role):
        if orientation == Qt.Horizontal and role == Qt.DisplayRole:
            return self._row[col]
        return None


class Ui_MainWindow(object):
    def insert_values(self):
        r = (self.lineEdit_4.text(),self.lineEdit_5.text(),
            self.lineEdit_6.text(),self.lineEdit_7.text(),
            self.lineEdit_8.text())
        return r

    def table(self,data):
        self.model = TableModel(data)
        self.tableView.setModel(self.model)

    def show_table(self):
        conn = sqlite3.connect('test_db.db')
        print("Opened database successfully");

        command = "SELECT * FROM SONG"
        t = conn.execute(command)
        #table = t.fetchall()
        conn.commit()
        #print(list(table))
        #self.tableView.setModel(table.fetchall())
        '''allSQLRows= t.fetchall()
        self.tableView.setRowCount(len(allSQLRows)) ##set number of rows
        self.tableView.setColumnCount(8) ##this is fixed for myTableWidget, ensure that both of your tables, sql and qtablewidged have the same number of columns

urow = 0
        while True:
            sqlRow = cur.fetchone()
            if sqlRow == None:
                break ##stops while loop if there is no more lines in sql table
            for col in range(0, 8): ##otherwise add row into tableWidget
                self.tableView.setItem(row, col, QtGui.QTableWidgetItem(sqlRow[col]))
            row += 1'''

        c = conn.execute("SELECT MAX(Track_ID) FROM SONG")
        i = c.fetchall()[0][0]+1

        self.label_12.setText(str(i))

        data = t.fetchall()
        self.table(data)
        conn.close()

    def temp_mod(self):
        self.tabWidget.setCurrentIndex(2) #set the tab

        conn = sqlite3.connect('test_db.db')
        print("Opened database successfully");

        command = "SELECT * FROM SONG WHERE SONG_NAME = 'DADA'"
        t = conn.execute(command)
        conn.commit()

        data = t.fetchall()
        self.model = TableModel(data)
        self.tableView.setModel(self.model)
        conn.close()

    def search(self):
        print(self.lineEdit.text())
        self.lineEdit_2.setText('bruh')

    def add(self):
        conn = sqlite3.connect('test_db.db')
        print("Opened database successfully");

        #c = conn.execute("SELECT MAX(Track_ID) FROM SONG")
        #i = c.fetchall()[0][0]+1
        i = int(self.label_12.text())
        #self.label_12.setText(i)

        val = self.insert_values()

        #conn.execute("INSERT INTO SONG ")
        command = "INSERT INTO SONG VALUES ({},?,?,?,?,?)".format(i)
        conn.execute(command,val)
        #conn.commit()

        c = conn.execute("SELECT * FROM SONG")
        d = c.fetchall()

        self.table(d)
        conn.close()

    def setupUi(self, MainWindow):
        MainWindow.setObjectName("MainWindow")
        MainWindow.resize(712, 737)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Fixed, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(MainWindow.sizePolicy().hasHeightForWidth())
        MainWindow.setSizePolicy(sizePolicy)
        self.centralwidget = QtWidgets.QWidget(MainWindow)
        self.centralwidget.setObjectName("centralwidget")
        self.tabWidget = QtWidgets.QTabWidget(self.centralwidget)
        self.tabWidget.setGeometry(QtCore.QRect(10, 50, 691, 251))
        self.tabWidget.setObjectName("tabWidget")
        self.tab_1 = QtWidgets.QWidget()
        self.tab_1.setObjectName("tab_1")
        self.lineEdit = QtWidgets.QLineEdit(self.tab_1)
        self.lineEdit.setGeometry(QtCore.QRect(170, 70, 113, 22))
        self.lineEdit.setObjectName("lineEdit")
        self.lineEdit_2 = QtWidgets.QLineEdit(self.tab_1)
        self.lineEdit_2.setGeometry(QtCore.QRect(520, 70, 113, 22))
        self.lineEdit_2.setObjectName("lineEdit_2")
        self.label = QtWidgets.QLabel(self.tab_1)
        self.label.setGeometry(QtCore.QRect(70, 70, 71, 16))
        self.label.setObjectName("label")
        self.label_2 = QtWidgets.QLabel(self.tab_1)
        self.label_2.setGeometry(QtCore.QRect(450, 80, 55, 16))
        self.label_2.setObjectName("label_2")
        self.label_3 = QtWidgets.QLabel(self.tab_1)
        self.label_3.setGeometry(QtCore.QRect(330, 10, 55, 16))
        self.label_3.setObjectName("label_3")
        self.pushButton_4 = QtWidgets.QPushButton(self.tab_1)
        self.pushButton_4.setGeometry(QtCore.QRect(310, 140, 93, 28))
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Fixed, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.pushButton_4.sizePolicy().hasHeightForWidth())
        self.pushButton_4.setSizePolicy(sizePolicy)
        self.pushButton_4.setObjectName("pushButton_4")
        self.tabWidget.addTab(self.tab_1, "")
        self.tab_2 = QtWidgets.QWidget()
        self.tab_2.setObjectName("tab_2")
        self.pushButton_5 = QtWidgets.QPushButton(self.tab_2)
        self.pushButton_5.setGeometry(QtCore.QRect(310, 90, 93, 28))
        self.pushButton_5.setObjectName("pushButton_5")
        self.label_6 = QtWidgets.QLabel(self.tab_2)
        self.label_6.setGeometry(QtCore.QRect(230, 40, 281, 20))
        self.label_6.setObjectName("label_6")
        self.tabWidget.addTab(self.tab_2, "")
        self.tab_3 = QtWidgets.QWidget()
        self.tab_3.setObjectName("tab_3")
        self.label_4 = QtWidgets.QLabel(self.tab_3)
        self.label_4.setGeometry(QtCore.QRect(50, 30, 71, 16))
        self.label_4.setObjectName("label_4")
        self.lineEdit_4 = QtWidgets.QLineEdit(self.tab_3)
        self.lineEdit_4.setGeometry(QtCore.QRect(480, 30, 113, 22))
        self.lineEdit_4.setObjectName("lineEdit_4")
        self.lineEdit_5 = QtWidgets.QLineEdit(self.tab_3)
        self.lineEdit_5.setGeometry(QtCore.QRect(160, 80, 113, 22))
        self.lineEdit_5.setObjectName("lineEdit_5")
        self.lineEdit_6 = QtWidgets.QLineEdit(self.tab_3)
        self.lineEdit_6.setGeometry(QtCore.QRect(480, 80, 113, 22))
        self.lineEdit_6.setObjectName("lineEdit_6")
        self.lineEdit_7 = QtWidgets.QLineEdit(self.tab_3)
        self.lineEdit_7.setGeometry(QtCore.QRect(160, 130, 113, 22))
        self.lineEdit_7.setObjectName("lineEdit_7")
        self.pushButton = QtWidgets.QPushButton(self.tab_3)
        self.pushButton.setGeometry(QtCore.QRect(200, 180, 93, 28))
        self.pushButton.setObjectName("pushButton")
        self.pushButton_2 = QtWidgets.QPushButton(self.tab_3)
        self.pushButton_2.setGeometry(QtCore.QRect(390, 180, 93, 28))
        self.pushButton_2.setObjectName("pushButton_2")
        self.lineEdit_8 = QtWidgets.QLineEdit(self.tab_3)
        self.lineEdit_8.setGeometry(QtCore.QRect(480, 130, 113, 22))
        self.lineEdit_8.setObjectName("lineEdit_8")
        self.label_7 = QtWidgets.QLabel(self.tab_3)
        self.label_7.setGeometry(QtCore.QRect(50, 80, 55, 16))
        self.label_7.setObjectName("label_7")
        self.label_8 = QtWidgets.QLabel(self.tab_3)
        self.label_8.setGeometry(QtCore.QRect(50, 130, 101, 20))
        self.label_8.setObjectName("label_8")
        self.label_9 = QtWidgets.QLabel(self.tab_3)
        self.label_9.setGeometry(QtCore.QRect(350, 30, 71, 20))
        self.label_9.setObjectName("label_9")
        self.label_10 = QtWidgets.QLabel(self.tab_3)
        self.label_10.setGeometry(QtCore.QRect(350, 80, 51, 20))
        self.label_10.setObjectName("label_10")
        self.label_11 = QtWidgets.QLabel(self.tab_3)
        self.label_11.setGeometry(QtCore.QRect(350, 130, 81, 20))
        self.label_11.setObjectName("label_11")
        self.label_12 = QtWidgets.QLabel(self.tab_3)
        self.label_12.setGeometry(QtCore.QRect(160, 30, 61, 16))
        self.label_12.setObjectName("label_12")
        self.tabWidget.addTab(self.tab_3, "")
        self.label_5 = QtWidgets.QLabel(self.centralwidget)
        self.label_5.setGeometry(QtCore.QRect(20, 20, 55, 16))
        self.label_5.setObjectName("label_5")
        self.tableView = QtWidgets.QTableView(self.centralwidget)
        self.tableView.setGeometry(QtCore.QRect(20, 351, 671, 231))
        self.tableView.setObjectName("tableView")
        self.pushButton_3 = QtWidgets.QPushButton(self.centralwidget)
        self.pushButton_3.setGeometry(QtCore.QRect(120, 610, 93, 28))
        self.pushButton_3.setObjectName("pushButton_3")
        self.pushButton_6 = QtWidgets.QPushButton(self.centralwidget)
        self.pushButton_6.setGeometry(QtCore.QRect(310, 610, 93, 28))
        self.pushButton_6.setObjectName("pushButton_6")
        self.pushButton_7 = QtWidgets.QPushButton(self.centralwidget)
        self.pushButton_7.setGeometry(QtCore.QRect(510, 610, 93, 28))
        self.pushButton_7.setObjectName("pushButton_7")
        self.line = QtWidgets.QFrame(self.centralwidget)
        self.line.setGeometry(QtCore.QRect(-50, 320, 871, 16))
        self.line.setFrameShape(QtWidgets.QFrame.HLine)
        self.line.setFrameShadow(QtWidgets.QFrame.Sunken)
        self.line.setObjectName("line")
        MainWindow.setCentralWidget(self.centralwidget)
        self.menubar = QtWidgets.QMenuBar(MainWindow)
        self.menubar.setGeometry(QtCore.QRect(0, 0, 712, 26))
        self.menubar.setObjectName("menubar")
        self.menuFile = QtWidgets.QMenu(self.menubar)
        self.menuFile.setObjectName("menuFile")
        self.menuHelp = QtWidgets.QMenu(self.menubar)
        self.menuHelp.setObjectName("menuHelp")
        MainWindow.setMenuBar(self.menubar)
        self.statusbar = QtWidgets.QStatusBar(MainWindow)
        self.statusbar.setObjectName("statusbar")
        MainWindow.setStatusBar(self.statusbar)
        self.actionNew = QtWidgets.QAction(MainWindow)
        self.actionNew.setObjectName("actionNew")
        self.actionOpen = QtWidgets.QAction(MainWindow)
        self.actionOpen.setObjectName("actionOpen")
        self.actionSave = QtWidgets.QAction(MainWindow)
        self.actionSave.setObjectName("actionSave")
        self.menuFile.addAction(self.actionNew)
        self.menuFile.addAction(self.actionOpen)
        self.menuFile.addAction(self.actionSave)
        self.menubar.addAction(self.menuFile.menuAction())
        self.menubar.addAction(self.menuHelp.menuAction())

        self.retranslateUi(MainWindow)
        self.tabWidget.setCurrentIndex(0)
        QtCore.QMetaObject.connectSlotsByName(MainWindow)

    def retranslateUi(self, MainWindow):
        _translate = QtCore.QCoreApplication.translate
        MainWindow.setWindowTitle(_translate("MainWindow", "MainWindow"))
        self.label.setText(_translate("MainWindow", "Song Name"))
        self.label_2.setText(_translate("MainWindow", "Artist"))
        self.label_3.setText(_translate("MainWindow", "SEARCH"))

        self.pushButton_4.setText(_translate("MainWindow", "Search"))
        self.pushButton_4.clicked.connect(self.search)

        self.tabWidget.setTabText(self.tabWidget.indexOf(self.tab_1), _translate("MainWindow", "Search"))
        self.pushButton_5.setText(_translate("MainWindow", "Browse"))
        self.label_6.setText(_translate("MainWindow", "BROWSE FOR SONGS TO ADD TO THE PLAYLIST"))
        self.tabWidget.setTabText(self.tabWidget.indexOf(self.tab_2), _translate("MainWindow", "Browse"))
        self.label_4.setText(_translate("MainWindow", "Track ID"))

        self.pushButton.setText(_translate("MainWindow", "Add Song"))
        self.pushButton.clicked.connect(self.add)

        self.pushButton_2.setText(_translate("MainWindow", "Update"))

        self.label_7.setText(_translate("MainWindow", "Artist"))
        self.label_8.setText(_translate("MainWindow", "Duration (mm:ss)"))
        self.label_9.setText(_translate("MainWindow", "Song Name"))
        self.label_10.setText(_translate("MainWindow", "Album"))
        self.label_11.setText(_translate("MainWindow", "Cover Image"))
        self.label_12.setText(_translate("MainWindow", "*NUMBER*"))
        self.tabWidget.setTabText(self.tabWidget.indexOf(self.tab_3), _translate("MainWindow", "Insert "))
        self.label_5.setText(_translate("MainWindow", "TITLE"))

        self.pushButton_3.setText(_translate("MainWindow", "Show Table"))
        self.pushButton_3.clicked.connect(self.show_table)

        self.pushButton_6.setText(_translate("MainWindow ", "Modify"))
        self.pushButton_6.clicked.connect(self.temp_mod)


        self.pushButton_7.setText(_translate("MainWindow", "Delete"))

        self.menuFile.setTitle(_translate("MainWindow", "File"))
        self.menuHelp.setTitle(_translate("MainWindow", "About"))
        self.actionNew.setText(_translate("MainWindow", "New"))
        self.actionOpen.setText(_translate("MainWindow", "Open"))
        self.actionSave.setText(_translate("MainWindow", "Save"))


if __name__ == "__main__":
    import sys
    app = QtWidgets.QApplication(sys.argv)
    MainWindow = QtWidgets.QMainWindow()
    ui = Ui_MainWindow()
    ui.setupUi(MainWindow)
    MainWindow.show()
    sys.exit(app.exec_())
